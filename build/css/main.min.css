/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}template{display:none}[hidden]{display:none}html{-webkit-box-sizing:border-box;box-sizing:border-box;color:#222;font-size:1em}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}hr{display:block;height:1px;border:0;border-top:1px solid #ccc;margin:1em 0;padding:0}audio,canvas,iframe,img,svg,video{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.browserupgrade{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}@font-face{font-family:noelanscript;src:url(/fonts/noelan_script-webfont.woff2) format("woff2"),url(/fonts/noelan_script-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:matterhornserif;src:url(/fonts/matterhornserif-regular-webfont.woff2) format("woff2"),url(/fonts/matterhornserif-regular-webfont.woff) format("woff");font-weight:400;font-style:normal}body,html{width:100%;height:100%}body{background:url(/img/bg-craft.jpg) repeat}.section{height:100vh;position:relative;width:100%;text-align:center}.section .center-container{left:0;top:50%;position:absolute;-webkit-transform:translate(0,-50%);-ms-transform:translate(0,-50%);transform:translate(0,-50%);width:100%}.section .flowers{position:absolute;width:100%;height:100%}.section .flowers .bottom,.section .flowers .top{position:absolute;width:300px;height:270px;background-size:cover;background-repeat:no-repeat}@media screen and (max-width:720px){.section .flowers .bottom,.section .flowers .top{width:150px;height:135px}}.section .flowers .top{background-image:url(/img/flowers-corner-top.png);top:0;right:0}.section .flowers .bottom{background-image:url(/img/flowers-corner-bottom.png);bottom:0;left:0}.title{font-family:matterhornserif;color:#fff;text-align:center;font-size:1.8em;text-transform:uppercase}.title:after,.title:before{display:block;content:'';width:120px;height:2px;background:#fff;margin:.4em auto}.container{margin:auto;max-width:75%;padding-top:100px}.landing .logo{color:#fff;font-weight:700}.landing .logo .letters span{display:block;font-family:noelanscript;font-weight:100;padding:.2em 0}.landing .logo .letters .name{font-size:4em}.landing .logo .letters .and{font-size:1.5em}.landing .logo .date{display:inline-block;border-top:1px solid #fff;border-bottom:1px solid #fff;font-size:1.3em;margin:1em 0;padding:.5em 0}.landing .logo:after,.landing .logo:before{content:'';background-position:center;background-size:cover;background-repeat:no-repeat;display:block;max-width:100%;width:600px;height:220px;margin:0 auto}.landing .logo:before{content:'';background-image:url(/img/flowers-top.png)}.landing .logo:after{background-image:url(/img/flowers-bottom.png);margin-top:-150px;height:359px}@media screen and (max-height:650px){.landing .logo .letters .name{font-size:2.5em}.landing .logo .letters .and{font-size:1em}.landing .logo:after{margin-top:-230px}}.menu{background:url(/img/bg-craft.jpg) repeat;padding:1.5em;text-align:center}.menu--fixed{position:fixed;top:0;width:100%;z-index:999}.menu ul{list-style:none}.menu ul li{display:inline;padding:0 1em}.menu ul li a{font-family:noelanscript;color:#fff;text-decoration:none;font-size:1.7em}@media screen and (max-width:520px){.menu{display:none}}.program{background:url(/img/bg-craft.jpg) repeat;text-align:center}.program ul{list-style:none;margin:70px auto 0;text-align:left;width:520px}@media screen and (max-width:520px){.program ul{width:100%;text-align:center}}.program ul li{padding:.8em 0;font-size:1.2em}.program ul li .event,.program ul li .moment,.program ul li .picto{display:inline-block}.program ul li .moment,.program ul li .picto{width:3em;height:3em}.program ul li .picto{text-align:center;margin-right:1.5em}.program ul li .picto img{max-width:100%;max-height:100%}.program ul li .moment{border-radius:50%;background:#fff;line-height:3em;text-align:center;font-family:noelanscript}.program ul li .event{margin-left:1em;color:#fff;width:300px;font-family:matterhornserif;font-size:.9em}@media screen and (max-width:520px){.program ul li .event{display:none}}@media screen and (max-height:650px){.program ul li{padding:.5em 0}}.photo{background:url(/img/portrait.jpg) center no-repeat;background-size:cover}@media screen and (max-width:520px){.photo{display:none}}.photos p{padding-top:2em;font-family:matterhornserif;color:#fff;font-size:1.2em}.photos p span{color:#679194;font-size:1.2em;margin-left:.2em;font-weight:700}.photos .gallery{position:relative;z-index:1;overflow:visible;list-style:none;padding-top:2em}.photos .gallery li{position:relative;display:inline-block;height:250px;margin-bottom:20px;margin-right:20px;padding:5px;background:#fff;-webkit-box-shadow:0 1px 4px rgba(0,0,0,.27),0 0 40px rgba(0,0,0,.06) inset;box-shadow:0 1px 4px rgba(0,0,0,.27),0 0 40px rgba(0,0,0,.06) inset;-webkit-transition:all .3s linear;-o-transition:all .3s linear;transition:all .3s linear}.photos .gallery li:after,.photos .gallery li:before{content:'';z-index:-1;position:absolute;left:17px;bottom:15px;width:70%;max-width:300px;height:55%;-webkit-box-shadow:0 8px 16px rgba(0,0,0,.3);box-shadow:0 8px 16px rgba(0,0,0,.3);-webkit-transform:skew(-20deg) rotate(-8deg);-ms-transform:skew(-20deg) rotate(-8deg);transform:skew(-20deg) rotate(-8deg)}.photos .gallery li::after{right:17px;-webkit-transform:skew(20deg) rotate(8deg);-ms-transform:skew(20deg) rotate(8deg);transform:skew(20deg) rotate(8deg)}.photos .gallery li img{max-width:100%;max-height:100%;padding:0}.infos{font-family:matterhornserif}.infos .title{margin-bottom:50px}.infos p{margin:auto;max-width:600px;padding:15px;color:#fff;font-size:1.1em;line-height:1.5em}.infos p a{color:#fff;text-decoration:underline}.infos p a:hover{text-decoration:none}.infos p::after{content:url(/img/lettrage.png);margin:30px auto 0;display:block}.infos p:last-of-type::after{content:''}@media screen and (max-width:520px){.infos p{font-size:.9em}.infos p::after{content:'';margin:0}}@media screen and (max-height:650px){.infos .title{margin-bottom:20px}.infos p{line-height:1.2em}.infos p::after{margin:15px auto 0}}.contact{font-family:matterhornserif}.contact .address{text-align:center;padding-top:100px;font-size:1.2em}.contact .address span{display:block;color:#fff;padding:.2em}.contact .address span.phone{margin-top:1em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2Uvbm9ybWFsaXplLnNjc3MiLCJtYWluLmNzcyIsImJhc2UvcmVzZXQuc2NzcyIsImJhc2UvY29tbW9uLnNjc3MiLCJtYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEVBWUEsS0FDRSxZQUFBLFdBQ0EsWUFBQSxLQUNBLHFCQUFBLEtBQ0EseUJBQUEsS0FVRixLQUNFLE9BQUEsRUFPRixRQ0hBLE1BQ0EsT0FDQSxPQUNBLElBQ0EsUURLRSxRQUFBLE1BUUYsR0FDRSxVQUFBLElBQ0EsT0FBQSxNQUFBLEVBV0YsV0NSQSxPQUNBLEtEVUUsUUFBQSxNQU9GLE9BQ0UsT0FBQSxJQUFBLEtBUUYsR0FDRSxtQkFBQSxZQUFBLFdBQUEsWUFDQSxPQUFBLEVBQ0EsU0FBQSxRQVFGLElBQ0UsWUFBQSxTQUFBLENBQUEsVUFDQSxVQUFBLElBV0YsRUFDRSxpQkFBQSxZQUNBLDZCQUFBLFFBUUYsU0NWQSxRRFlFLGNBQUEsRUFRRixZQUNFLGNBQUEsS0FDQSxnQkFBQSxVQUNBLHdCQUFBLFVBQUEsT0FBQSxnQkFBQSxVQUFBLE9BT0YsRUNWQSxPRFlFLFlBQUEsUUFPRixFQ1pBLE9EY0UsWUFBQSxPQVFGLEtDZEEsSUFDQSxLRGdCRSxZQUFBLFNBQUEsQ0FBQSxVQUNBLFVBQUEsSUFPRixJQUNFLFdBQUEsT0FPRixLQUNFLGlCQUFBLEtBQ0EsTUFBQSxLQU9GLE1BQ0UsVUFBQSxJQVFGLElDcEJBLElEc0JFLFVBQUEsSUFDQSxZQUFBLEVBQ0EsU0FBQSxTQUNBLGVBQUEsU0FHRixJQUNFLE9BQUEsT0FHRixJQUNFLElBQUEsTUFVRixNQ3pCQSxNRDJCRSxRQUFBLGFBT0Ysc0JBQ0UsUUFBQSxLQUNBLE9BQUEsRUFPRixJQUNFLGFBQUEsS0FPRixlQUNFLFNBQUEsT0FXRixPQ2xDQSxNQUNBLFNBQ0EsT0FDQSxTRG9DRSxZQUFBLFdBQ0EsVUFBQSxLQUNBLFlBQUEsS0FDQSxPQUFBLEVBUUYsT0NoQ0EsTURrQ0UsU0FBQSxRQVFGLE9DakNB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Z0JBcUJNLFFBQUEsdUJBQ0EsT0FBQSxLQUFBLEtBQUEsRUFDQSxRQUFBLE1BdkJOLDZCQTJCUSxRQUFBLEdBRU4sb0NBN0JGLFNBK0JNLFVBQUEsS0EvQk4sZ0JBaUNRLFFBQUEsR0FDQSxPQUFBLEdBRU4scUNBcENGLGNBc0NNLGNBQUEsS0F0Q04sU0F3Q00sWUFBQSxNQXhDTixnQkEwQ1EsT0FBQSxLQUFBLEtBQUEsR0FJUixTQUNFLFlBQUEsZ0JBREYsa0JBSUksV0FBQSxPQUNBLFlBQUEsTUFDQSxVQUFBLE1BTkosdUJBU00sUUFBQSxNQUNBLE1BQUEsS0FDQSxRQUFBLEtBWE4sNkJBY1EsV0FBQSIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY1LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAzLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXG4gKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMiAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMyAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4geyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjUuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAzLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXG4gKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAyICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAzICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMyAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5tYWluIHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuYXVkaW8sXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyxcbm1lbnUge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIFNjcmlwdGluZ1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogSGlkZGVuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKlxyXG4gKiBXaGF0IGZvbGxvd3MgaXMgdGhlIHJlc3VsdCBvZiBtdWNoIHJlc2VhcmNoIG9uIGNyb3NzLWJyb3dzZXIgc3R5bGluZy5cclxuICogQ3JlZGl0IGxlZnQgaW5saW5lIGFuZCBiaWcgdGhhbmtzIHRvIE5pY29sYXMgR2FsbGFnaGVyLCBKb25hdGhhbiBOZWFsLFxyXG4gKiBLcm9jIENhbWVuLCBhbmQgdGhlIEg1QlAgZGV2IGNvbW11bml0eSBhbmQgdGVhbS5cclxuICovXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBCYXNlIHN0eWxlczogb3BpbmlvbmF0ZWQgZGVmYXVsdHNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qIGFwcGx5IGEgbmF0dXJhbCBib3ggbGF5b3V0IG1vZGVsIHRvIGFsbCBlbGVtZW50cywgYnV0IGFsbG93aW5nIGNvbXBvbmVudHMgdG8gY2hhbmdlICovXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgY29sb3I6ICMyMjI7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG4vKlxyXG4gKiBSZW1vdmUgdGV4dC1zaGFkb3cgaW4gc2VsZWN0aW9uIGhpZ2hsaWdodDpcclxuICogaHR0cHM6Ly90d2l0dGVyLmNvbS9taWtldGF5bHIvc3RhdHVzLzEyMjI4ODA1MzAxXHJcbiAqXHJcbiAqIFRoZXNlIHNlbGVjdGlvbiBydWxlIHNldHMgaGF2ZSB0byBiZSBzZXBhcmF0ZS5cclxuICogQ3VzdG9taXplIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIHRvIG1hdGNoIHlvdXIgZGVzaWduLlxyXG4gKi9cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogI2IzZDRmYztcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuLypcclxuICogQSBiZXR0ZXIgbG9va2luZyBkZWZhdWx0IGhvcml6b250YWwgcnVsZVxyXG4gKi9cbmhyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMXB4O1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xuICBtYXJnaW46IDFlbSAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qXHJcbiAqIFJlbW92ZSB0aGUgZ2FwIGJldHdlZW4gYXVkaW8sIGNhbnZhcywgaWZyYW1lcyxcclxuICogaW1hZ2VzLCB2aWRlb3MgYW5kIHRoZSBib3R0b20gb2YgdGhlaXIgY29udGFpbmVyczpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvaXNzdWVzLzQ0MFxyXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxuaWZyYW1lLFxuaW1nLFxuc3ZnLFxudmlkZW8ge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi8qXHJcbiAqIFJlbW92ZSBkZWZhdWx0IGZpZWxkc2V0IHN0eWxlcy5cclxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qXHJcbiAqIEFsbG93IG9ubHkgdmVydGljYWwgcmVzaXppbmcgb2YgdGV4dGFyZWFzLlxyXG4gKi9cbnRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBCcm93c2VyIFVwZ3JhZGUgUHJvbXB0XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4uYnJvd3NlcnVwZ3JhZGUge1xuICBtYXJnaW46IDAuMmVtIDA7XG4gIGJhY2tncm91bmQ6ICNjY2M7XG4gIGNvbG9yOiAjMDAwO1xuICBwYWRkaW5nOiAwLjJlbSAwOyB9XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIEF1dGhvcidzIGN1c3RvbSBzdHlsZXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ25vZWxhbnNjcmlwdCc7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL25vZWxhbl9zY3JpcHQtd2ViZm9udC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL2ZvbnRzL25vZWxhbl9zY3JpcHQtd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdtYXR0ZXJob3Juc2VyaWYnO1xuICBzcmM6IHVybChcIi9mb250cy9tYXR0ZXJob3Juc2VyaWYtcmVndWxhci13ZWJmb250LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvZm9udHMvbWF0dGVyaG9ybnNlcmlmLXJlZ3VsYXItd2ViZm9udC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5odG1sLCBib2R5IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgfVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogdXJsKFwiL2ltZy9iZy1jcmFmdC5qcGdcIikgcmVwZWF0OyB9XG5cbi5zZWN0aW9uIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5zZWN0aW9uIC5jZW50ZXItY29udGFpbmVyIHtcbiAgICBsZWZ0OiAwJTtcbiAgICB0b3A6IDUwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCUsIC01MCUpO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5zZWN0aW9uIC5mbG93ZXJzIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG4gICAgLnNlY3Rpb24gLmZsb3dlcnMgLnRvcCxcbiAgICAuc2VjdGlvbiAuZmxvd2VycyAuYm90dG9tIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAzMDBweDtcbiAgICAgIGhlaWdodDogMjcwcHg7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzIwcHgpIHtcbiAgICAgICAgLnNlY3Rpb24gLmZsb3dlcnMgLnRvcCxcbiAgICAgICAgLnNlY3Rpb24gLmZsb3dlcnMgLmJvdHRvbSB7XG4gICAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgICAgICAgIGhlaWdodDogMTM1cHg7IH0gfVxuICAgIC5zZWN0aW9uIC5mbG93ZXJzIC50b3Age1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWcvZmxvd2Vycy1jb3JuZXItdG9wLnBuZyk7XG4gICAgICB0b3A6IDA7XG4gICAgICByaWdodDogMDsgfVxuICAgIC5zZWN0aW9uIC5mbG93ZXJzIC5ib3R0b20ge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWcvZmxvd2Vycy1jb3JuZXItYm90dG9tLnBuZyk7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwOyB9XG5cbi50aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiAnbWF0dGVyaG9ybnNlcmlmJztcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMS44ZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgLnRpdGxlOmJlZm9yZSwgLnRpdGxlOmFmdGVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogMTIwcHg7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgbWFyZ2luOiAuNGVtIGF1dG87IH1cblxuLmNvbnRhaW5lciB7XG4gIG1hcmdpbjogYXV0bztcbiAgbWF4LXdpZHRoOiA3NSU7XG4gIHBhZGRpbmctdG9wOiAxMDBweDsgfVxuXG4ubGFuZGluZyAubG9nbyB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgLmxhbmRpbmcgLmxvZ28gLmxldHRlcnMgc3BhbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1mYW1pbHk6ICdub2VsYW5zY3JpcHQnO1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgcGFkZGluZzogLjJlbSAwOyB9XG4gIC5sYW5kaW5nIC5sb2dvIC5sZXR0ZXJzIC5uYW1lIHtcbiAgICBmb250LXNpemU6IDRlbTsgfVxuICAubGFuZGluZyAubG9nbyAubGV0dGVycyAuYW5kIHtcbiAgICBmb250LXNpemU6IDEuNWVtOyB9XG4gIC5sYW5kaW5nIC5sb2dvIC5kYXRlIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHdoaXRlO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZTtcbiAgICBmb250LXNpemU6IDEuM2VtO1xuICAgIG1hcmdpbjogMWVtIDA7XG4gICAgcGFkZGluZzogLjVlbSAwOyB9XG4gIC5sYW5kaW5nIC5sb2dvOmJlZm9yZSwgLmxhbmRpbmcgLmxvZ286YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHdpZHRoOiA2MDBweDtcbiAgICBoZWlnaHQ6IDIyMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gIC5sYW5kaW5nIC5sb2dvOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiL2ltZy9mbG93ZXJzLXRvcC5wbmdcIik7IH1cbiAgLmxhbmRpbmcgLmxvZ286YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi9pbWcvZmxvd2Vycy1ib3R0b20ucG5nXCIpO1xuICAgIG1hcmdpbi10b3A6IC0xNTBweDtcbiAgICBoZWlnaHQ6IDM1OXB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiA2NTBweCkge1xuICAgIC5sYW5kaW5nIC5sb2dvIC5sZXR0ZXJzIC5uYW1lIHtcbiAgICAgIGZvbnQtc2l6ZTogMi41ZW07IH1cbiAgICAubGFuZGluZyAubG9nbyAubGV0dGVycyAuYW5kIHtcbiAgICAgIGZvbnQtc2l6ZTogMWVtOyB9XG4gICAgLmxhbmRpbmcgLmxvZ286YWZ0ZXIge1xuICAgICAgbWFyZ2luLXRvcDogLTIzMHB4OyB9IH1cblxuLm1lbnUge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIvaW1nL2JnLWNyYWZ0LmpwZ1wiKSByZXBlYXQ7XG4gIHBhZGRpbmc6IDEuNWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLm1lbnUtLWZpeGVkIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHotaW5kZXg6IDk5OTsgfVxuICAubWVudSB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTsgfVxuICAgIC5tZW51IHVsIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgIHBhZGRpbmc6IDAgMWVtOyB9XG4gICAgICAubWVudSB1bCBsaSBhIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdub2VsYW5zY3JpcHQnO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgZm9udC1zaXplOiAxLjdlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAgIC5tZW51IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4ucHJvZ3JhbSB7XG4gIGJhY2tncm91bmQ6IHVybChcIi9pbWcvYmctY3JhZnQuanBnXCIpIHJlcGVhdDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5wcm9ncmFtIHVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogNzBweCBhdXRvIDA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB3aWR0aDogNTIwcHg7IH1cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAgICAgLnByb2dyYW0gdWwge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cbiAgICAucHJvZ3JhbSB1bCBsaSB7XG4gICAgICBwYWRkaW5nOiAuOGVtIDA7XG4gICAgICBmb250LXNpemU6IDEuMmVtOyB9XG4gICAgICAucHJvZ3JhbSB1bCBsaSAucGljdG8sXG4gICAgICAucHJvZ3JhbSB1bCBsaSAubW9tZW50LFxuICAgICAgLnByb2dyYW0gdWwgbGkgLmV2ZW50IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgICAucHJvZ3JhbSB1bCBsaSAucGljdG8sXG4gICAgICAucHJvZ3JhbSB1bCBsaSAubW9tZW50IHtcbiAgICAgICAgd2lkdGg6IDNlbTtcbiAgICAgICAgaGVpZ2h0OiAzZW07IH1cbiAgICAgIC5wcm9ncmFtIHVsIGxpIC5waWN0byB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxLjVlbTsgfVxuICAgICAgICAucHJvZ3JhbSB1bCBsaSAucGljdG8gaW1nIHtcbiAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgICAgbWF4LWhlaWdodDogMTAwJTsgfVxuICAgICAgLnByb2dyYW0gdWwgbGkgLm1vbWVudCB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzZW07XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdub2VsYW5zY3JpcHQnOyB9XG4gICAgICAucHJvZ3JhbSB1bCBsaSAuZXZlbnQge1xuICAgICAgICBtYXJnaW4tbGVmdDogMWVtO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICAgICAgZm9udC1mYW1pbHk6ICdtYXR0ZXJob3Juc2VyaWYnO1xuICAgICAgICBmb250LXNpemU6IC45ZW07IH1cbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgICAgICAgICAucHJvZ3JhbSB1bCBsaSAuZXZlbnQge1xuICAgICAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1oZWlnaHQ6IDY1MHB4KSB7XG4gICAgICAucHJvZ3JhbSB1bCBsaSB7XG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMDsgfSB9XG5cbi5waG90byB7XG4gIGJhY2tncm91bmQ6IHVybCgvaW1nL3BvcnRyYWl0LmpwZykgY2VudGVyIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAgIC5waG90byB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLnBob3RvcyBwIHtcbiAgcGFkZGluZy10b3A6IDJlbTtcbiAgZm9udC1mYW1pbHk6ICdtYXR0ZXJob3Juc2VyaWYnO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogMS4yZW07IH1cbiAgLnBob3RvcyBwIHNwYW4ge1xuICAgIGNvbG9yOiAjNjc5MTk0O1xuICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gICAgbWFyZ2luLWxlZnQ6IC4yZW07XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLnBob3RvcyAuZ2FsbGVyeSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmctdG9wOiAyZW07IH1cbiAgLnBob3RvcyAuZ2FsbGVyeSBsaSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDI1MHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMjcpLCAwIDAgNDBweCByZ2JhKDAsIDAsIDAsIDAuMDYpIGluc2V0O1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjsgfVxuICAgIC5waG90b3MgLmdhbGxlcnkgbGk6YmVmb3JlLCAucGhvdG9zIC5nYWxsZXJ5IGxpOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgei1pbmRleDogLTE7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAxN3B4O1xuICAgICAgYm90dG9tOiAxNXB4O1xuICAgICAgd2lkdGg6IDcwJTtcbiAgICAgIG1heC13aWR0aDogMzAwcHg7XG4gICAgICAvKiBhdm9pZCByb3RhdGlvbiBjYXVzaW5nIHVnbHkgYXBwZWFyYW5jZSBhdCBsYXJnZSBjb250YWluZXIgd2lkdGhzICovXG4gICAgICBoZWlnaHQ6IDU1JTtcbiAgICAgIGJveC1zaGFkb3c6IDAgOHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgICAgdHJhbnNmb3JtOiBza2V3KC0yMGRlZykgcm90YXRlKC04ZGVnKTsgfVxuICAgIC5waG90b3MgLmdhbGxlcnkgbGk6OmFmdGVyIHtcbiAgICAgIHJpZ2h0OiAxN3B4O1xuICAgICAgdHJhbnNmb3JtOiBza2V3KDIwZGVnKSByb3RhdGUoOGRlZyk7IH1cbiAgICAucGhvdG9zIC5nYWxsZXJ5IGxpIGltZyB7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgICAgcGFkZGluZzogMDsgfVxuXG4uaW5mb3Mge1xuICBmb250LWZhbWlseTogJ21hdHRlcmhvcm5zZXJpZic7IH1cbiAgLmluZm9zIC50aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDsgfVxuICAuaW5mb3MgcCB7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIG1heC13aWR0aDogNjAwcHg7XG4gICAgcGFkZGluZzogMTVweDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxLjFlbTtcbiAgICBsaW5lLWhlaWdodDogMS41ZW07IH1cbiAgICAuaW5mb3MgcCBhIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gICAgICAuaW5mb3MgcCBhOmhvdmVyIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgLmluZm9zIHA6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IHVybCgvaW1nL2xldHRyYWdlLnBuZyk7XG4gICAgICBtYXJnaW46IDMwcHggYXV0byAwO1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAuaW5mb3MgcDpsYXN0LW9mLXR5cGU6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcnOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUyMHB4KSB7XG4gICAgLmluZm9zIHAge1xuICAgICAgZm9udC1zaXplOiAuOWVtOyB9XG4gICAgICAuaW5mb3MgcDo6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgbWFyZ2luOiAwOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1oZWlnaHQ6IDY1MHB4KSB7XG4gICAgLmluZm9zIC50aXRsZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG4gICAgLmluZm9zIHAge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMmVtOyB9XG4gICAgICAuaW5mb3MgcDo6YWZ0ZXIge1xuICAgICAgICBtYXJnaW46IDE1cHggYXV0byAwOyB9IH1cblxuLmNvbnRhY3Qge1xuICBmb250LWZhbWlseTogJ21hdHRlcmhvcm5zZXJpZic7IH1cbiAgLmNvbnRhY3QgLmFkZHJlc3Mge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogMTAwcHg7XG4gICAgZm9udC1zaXplOiAxLjJlbTsgfVxuICAgIC5jb250YWN0IC5hZGRyZXNzIHNwYW4ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgICBwYWRkaW5nOiAuMmVtOyB9XG4gICAgICAuY29udGFjdCAuYWRkcmVzcyBzcGFuLnBob25lIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMWVtOyB9XG4iLCIvKlxyXG4gKiBXaGF0IGZvbGxvd3MgaXMgdGhlIHJlc3VsdCBvZiBtdWNoIHJlc2VhcmNoIG9uIGNyb3NzLWJyb3dzZXIgc3R5bGluZy5cclxuICogQ3JlZGl0IGxlZnQgaW5saW5lIGFuZCBiaWcgdGhhbmtzIHRvIE5pY29sYXMgR2FsbGFnaGVyLCBKb25hdGhhbiBOZWFsLFxyXG4gKiBLcm9jIENhbWVuLCBhbmQgdGhlIEg1QlAgZGV2IGNvbW11bml0eSBhbmQgdGVhbS5cclxuICovXHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBCYXNlIHN0eWxlczogb3BpbmlvbmF0ZWQgZGVmYXVsdHNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qIGFwcGx5IGEgbmF0dXJhbCBib3ggbGF5b3V0IG1vZGVsIHRvIGFsbCBlbGVtZW50cywgYnV0IGFsbG93aW5nIGNvbXBvbmVudHMgdG8gY2hhbmdlICovXHJcbmh0bWwge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGNvbG9yOiAjMjIyO1xyXG4gICAgZm9udC1zaXplOiAxZW07XHJcbn1cclxuXHJcbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcclxuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XHJcbn1cclxuXHJcbi8qXHJcbiAqIFJlbW92ZSB0ZXh0LXNoYWRvdyBpbiBzZWxlY3Rpb24gaGlnaGxpZ2h0OlxyXG4gKiBodHRwczovL3R3aXR0ZXIuY29tL21pa2V0YXlsci9zdGF0dXMvMTIyMjg4MDUzMDFcclxuICpcclxuICogVGhlc2Ugc2VsZWN0aW9uIHJ1bGUgc2V0cyBoYXZlIHRvIGJlIHNlcGFyYXRlLlxyXG4gKiBDdXN0b21pemUgdGhlIGJhY2tncm91bmQgY29sb3IgdG8gbWF0Y2ggeW91ciBkZXNpZ24uXHJcbiAqL1xyXG5cclxuOjpzZWxlY3Rpb24ge1xyXG4gICAgYmFja2dyb3VuZDogI2IzZDRmYztcclxuICAgIHRleHQtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG4vKlxyXG4gKiBBIGJldHRlciBsb29raW5nIGRlZmF1bHQgaG9yaXpvbnRhbCBydWxlXHJcbiAqL1xyXG5cclxuaHIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBoZWlnaHQ6IDFweDtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgbWFyZ2luOiAxZW0gMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi8qXHJcbiAqIFJlbW92ZSB0aGUgZ2FwIGJldHdlZW4gYXVkaW8sIGNhbnZhcywgaWZyYW1lcyxcclxuICogaW1hZ2VzLCB2aWRlb3MgYW5kIHRoZSBib3R0b20gb2YgdGhlaXIgY29udGFpbmVyczpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvaXNzdWVzLzQ0MFxyXG4gKi9cclxuXHJcbmF1ZGlvLFxyXG5jYW52YXMsXHJcbmlmcmFtZSxcclxuaW1nLFxyXG5zdmcsXHJcbnZpZGVvIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbi8qXHJcbiAqIFJlbW92ZSBkZWZhdWx0IGZpZWxkc2V0IHN0eWxlcy5cclxuICovXHJcblxyXG5maWVsZHNldCB7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKlxyXG4gKiBBbGxvdyBvbmx5IHZlcnRpY2FsIHJlc2l6aW5nIG9mIHRleHRhcmVhcy5cclxuICovXHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICByZXNpemU6IHZlcnRpY2FsO1xyXG59XHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBCcm93c2VyIFVwZ3JhZGUgUHJvbXB0XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4uYnJvd3NlcnVwZ3JhZGUge1xyXG4gICAgbWFyZ2luOiAwLjJlbSAwO1xyXG4gICAgYmFja2dyb3VuZDogI2NjYztcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgcGFkZGluZzogMC4yZW0gMDtcclxufVxyXG5cclxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgQXV0aG9yJ3MgY3VzdG9tIHN0eWxlc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4iLCJAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdub2VsYW5zY3JpcHQnO1xuICBzcmM6IHVybCgnL2ZvbnRzL25vZWxhbl9zY3JpcHQtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICB1cmwoJy9mb250cy9ub2VsYW5fc2NyaXB0LXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ21hdHRlcmhvcm5zZXJpZic7XG4gIHNyYzogdXJsKCcvZm9udHMvbWF0dGVyaG9ybnNlcmlmLXJlZ3VsYXItd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICB1cmwoJy9mb250cy9tYXR0ZXJob3Juc2VyaWYtcmVndWxhci13ZWJmb250LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5odG1sLCBib2R5IHtcblx0d2lkdGg6IDEwMCU7XG5cdGhlaWdodDogMTAwJTtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQ6IHVybCgnL2ltZy9iZy1jcmFmdC5qcGcnKSByZXBlYXQ7XG59XG5cbi5zZWN0aW9uIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIC5jZW50ZXItY29udGFpbmVyIHsgXG4gICAgbGVmdDogMCU7XG4gICAgdG9wOiA1MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAlLCAtNTAlKTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5mbG93ZXJzIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgLnRvcCwgXG4gICAgLmJvdHRvbSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMzAwcHg7XG4gICAgICBoZWlnaHQ6IDI3MHB4O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG5cbiAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MjBweCkge1xuICAgICAgIFx0d2lkdGg6IDE1MHB4O1xuICAgICAgIFx0aGVpZ2h0OiAxMzVweDtcbiAgICAgICB9XG4gICAgfVxuXG4gICAgLnRvcCB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoL2ltZy9mbG93ZXJzLWNvcm5lci10b3AucG5nKTtcbiAgICAgIHRvcDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgIH1cblxuICAgIC5ib3R0b20ge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC9pbWcvZmxvd2Vycy1jb3JuZXItYm90dG9tLnBuZyk7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgIH1cbiAgfVxufVxuXG4udGl0bGUge1xuICBmb250LWZhbWlseTogJ21hdHRlcmhvcm5zZXJpZic7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDEuOGVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIFxuICAmOmJlZm9yZSwgXG4gICY6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHdpZHRoOiAxMjBweDtcbiAgICBoZWlnaHQ6IDJweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBtYXJnaW46IC40ZW0gYXV0bztcbiAgfVxufVxuXG4uY29udGFpbmVyIHtcbiAgbWFyZ2luOiBhdXRvO1xuICBtYXgtd2lkdGg6IDc1JTtcbiAgcGFkZGluZy10b3A6IDEwMHB4O1xufSIsIkBpbXBvcnQgJ2Jhc2Uvbm9ybWFsaXplLnNjc3MnO1xuQGltcG9ydCAnYmFzZS9yZXNldC5zY3NzJztcbkBpbXBvcnQgJ2Jhc2UvY29tbW9uLnNjc3MnO1xuXG4vLyBMYW5kaW5nIHNlY3Rpb25cbi5sYW5kaW5nIHtcbiAgLmxvZ28ge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIC5sZXR0ZXJzIHtcbiAgICAgIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZm9udC1mYW1pbHk6ICdub2VsYW5zY3JpcHQnO1xuICAgICAgICBmb250LXdlaWdodDogMTAwO1xuICAgICAgICBwYWRkaW5nOiAuMmVtIDA7IH1cbiAgICAgIC5uYW1lIHtcbiAgICAgICAgZm9udC1zaXplOiA0ZW07IH1cbiAgICAgIC5hbmQge1xuICAgICAgICBmb250LXNpemU6IDEuNWVtOyB9IH1cblxuICAgIC8vIGltZ1xuICAgIC8vICAgZGlzcGxheTogYmxvY2s7XG4gICAgLy8gICBtYXJnaW46IGF1dG87XG5cbiAgICAuZGF0ZSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBib3JkZXItdG9wOiAxcHggc29saWQgd2hpdGU7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgd2hpdGU7XG4gICAgICBmb250LXNpemU6IDEuM2VtO1xuICAgICAgbWFyZ2luOiAxZW0gMDtcbiAgICAgIHBhZGRpbmc6IC41ZW0gMDsgfVxuXG4gICAgJjpiZWZvcmUsXG4gICAgJjphZnRlciB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB3aWR0aDogNjAwcHg7XG4gICAgICBoZWlnaHQ6IDIyMHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG87IH1cblxuICAgICY6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcvaW1nL2Zsb3dlcnMtdG9wLnBuZycpOyB9XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnL2ltZy9mbG93ZXJzLWJvdHRvbS5wbmcnKTtcbiAgICAgIG1hcmdpbi10b3A6IC0xNTBweDtcbiAgICAgIGhlaWdodDogMzU5cHg7IH1cblxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtaGVpZ2h0OiA2NTBweCkge1xuICAgICAgLmxldHRlcnMgLm5hbWUge1xuICAgICAgICBmb250LXNpemU6IDIuNWVtOyB9XG4gICAgICAubGV0dGVycyAuYW5kIHtcbiAgICAgICAgZm9udC1zaXplOiAxZW07IH1cbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICBtYXJnaW4tdG9wOiAtMjMwcHg7IH0gfSB9IH1cblxuXG4vLyBNZW51IHNlY3Rpb25cbi5tZW51IHtcbiAgYmFja2dyb3VuZDogdXJsKCcvaW1nL2JnLWNyYWZ0LmpwZycpIHJlcGVhdDtcbiAgcGFkZGluZzogMS41ZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgJi0tZml4ZWQge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogOTk5OyB9XG5cbiAgdWwge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICBsaSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICBwYWRkaW5nOiAwIDFlbTtcblxuICAgICAgYSB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnbm9lbGFuc2NyaXB0JztcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGZvbnQtc2l6ZTogMS43ZW07IH0gfSB9XG5cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuXG4vLyBQcm9ncmFtIHNlY3Rpb25cbi5wcm9ncmFtIHtcbiAgYmFja2dyb3VuZDogdXJsKCcvaW1nL2JnLWNyYWZ0LmpwZycpIHJlcGVhdDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIHVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogNzBweCBhdXRvIDA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB3aWR0aDogNTIwcHg7XG5cbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MjBweCkge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuICAgIGxpIHtcbiAgICAgIHBhZGRpbmc6IC44ZW0gMDtcbiAgICAgIGZvbnQtc2l6ZTogMS4yZW07XG5cbiAgICAgIC5waWN0byxcbiAgICAgIC5tb21lbnQsXG4gICAgICAuZXZlbnQge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuICAgICAgLnBpY3RvLFxuICAgICAgLm1vbWVudCwge1xuICAgICAgICB3aWR0aDogM2VtO1xuICAgICAgICBoZWlnaHQ6IDNlbTsgfVxuXG4gICAgICAucGljdG8ge1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMS41ZW07XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgICAgbWF4LWhlaWdodDogMTAwJTsgfSB9XG5cbiAgICAgIC5tb21lbnQge1xuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICBsaW5lLWhlaWdodDogM2VtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnbm9lbGFuc2NyaXB0JzsgfVxuXG5cbiAgICAgIC5ldmVudCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxZW07XG4gICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xuICAgICAgICBmb250LWZhbWlseTogJ21hdHRlcmhvcm5zZXJpZic7XG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lOyB9IH0gfVxuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1oZWlnaHQ6IDY1MHB4KSB7XG4gICAgICBsaSB7XG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMDsgfSB9IH0gfVxuXG5cblxuXG4vLyBQaG90byBtZW51XG4ucGhvdG8ge1xuICBiYWNrZ3JvdW5kOiB1cmwoL2ltZy9wb3J0cmFpdC5qcGcpIGNlbnRlciBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuXG4vLyBNYXAgc2VjdGlvblxuLy8gI21hcFxuLy8gICBoZWlnaHQ6IDEwMCVcbi8vICAgd2lkdGg6IDEwMCU7XG5cbi5waG90b3Mge1xuICBwIHtcbiAgICBwYWRkaW5nLXRvcDogMmVtO1xuICAgIGZvbnQtZmFtaWx5OiAnbWF0dGVyaG9ybnNlcmlmJztcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcblxuICAgIHNwYW4ge1xuICAgICAgY29sb3I6ICM2NzkxOTQ7XG4gICAgICBmb250LXNpemU6IDEuMmVtO1xuICAgICAgbWFyZ2luLWxlZnQ6IC4yZW07XG4gICAgICBmb250LXdlaWdodDogYm9sZDsgfSB9XG5cbiAgLmdhbGxlcnkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZy10b3A6IDJlbTtcblxuICAgIGxpIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogMjUwcHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xuICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIGJveC1zaGFkb3c6IDAgMXB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMjcpLCAwIDAgNDBweCByZ2JhKDAsIDAsIDAsIDAuMDYpIGluc2V0O1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyO1xuXG4gICAgICAmOmJlZm9yZSxcbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMTdweDtcbiAgICAgICAgYm90dG9tOiAxNXB4O1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICBtYXgtd2lkdGg6IDMwMHB4OyAvKiBhdm9pZCByb3RhdGlvbiBjYXVzaW5nIHVnbHkgYXBwZWFyYW5jZSBhdCBsYXJnZSBjb250YWluZXIgd2lkdGhzICovO1xuICAgICAgICBoZWlnaHQ6IDU1JTtcbiAgICAgICAgYm94LXNoYWRvdzogMCA4cHggMTZweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAgICAgIHRyYW5zZm9ybTogc2tldygtMjBkZWcpIHJvdGF0ZSgtOGRlZyk7IH1cblxuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICByaWdodDogMTdweDtcbiAgICAgICAgdHJhbnNmb3JtOiBza2V3KDIwZGVnKSByb3RhdGUoOGRlZyk7IH1cblxuICAgICAgaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH0gfSB9XG5cbi8vIEluZm9zIHNlY3Rpb25cbi5pbmZvcyB7XG4gIGZvbnQtZmFtaWx5OiAnbWF0dGVyaG9ybnNlcmlmJztcblxuICAudGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7IH1cblxuICBwIHtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgbWF4LXdpZHRoOiA2MDBweDtcbiAgICBwYWRkaW5nOiAxNXB4O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXNpemU6IDEuMWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjVlbTtcblxuICAgIGEge1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9IH1cblxuICAgICY6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IHVybCgvaW1nL2xldHRyYWdlLnBuZyk7XG4gICAgICBtYXJnaW46IDMwcHggYXV0byAwO1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cblxuICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7IH0gfSB9XG5cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTIwcHgpIHtcbiAgICBwIHtcbiAgICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgICAgICY6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIG1hcmdpbjogMDsgfSB9IH1cblxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LWhlaWdodDogNjUwcHgpIHtcbiAgICAudGl0bGUge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsgfVxuICAgIHAge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBtYXJnaW46IDE1cHggYXV0byAwOyB9IH0gfSB9XG5cblxuLy8gQ29udGFjdCBzZWN0aW9uXG4uY29udGFjdCB7XG4gIGZvbnQtZmFtaWx5OiAnbWF0dGVyaG9ybnNlcmlmJztcblxuICAuYWRkcmVzcyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiAxMDBweDtcbiAgICBmb250LXNpemU6IDEuMmVtO1xuXG4gICAgc3BhbiB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIHBhZGRpbmc6IC4yZW07XG5cbiAgICAgICYucGhvbmUge1xuICAgICAgICBtYXJnaW4tdG9wOiAxZW07IH0gfSB9IH1cbiJdfQ== */
